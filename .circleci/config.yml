version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@1
  slack: circleci/slack@3.4.2
  snyk: snyk/snyk@0.0.10

executors:
  docker:
    docker:
      - image: cimg/node:lts
  php:
    docker:
      - image: cimg/php:8.0-node

jobs:
  checkout-code:
    executor: php
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install PHP dependencies
          command: composer install --no-interaction --prefer-dist
      - run:
          name: Install JS dependencies
          command: yarn install --no-dev --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
            - vendor
          key: v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: "."
          paths:
            - "*"

  test:
    executor: php
    steps:
      - attach_workspace:
          at: "."
      - run:
          name: Configure app
          command: |
            cp .env.example .env
            php artisan key:generate
      - run:
          name: Run tests
          command: |
            export XDEBUG_MODE=coverage
            ./vendor/bin/phpunit \
              --log-junit tests/results/junit.xml \
              --coverage-html tests/results/coverage-html \
              --coverage-clover tests/results/coverage.xml
      - store_test_results:
          path: tests/results
      - store_artifacts:
          path: tests/results/coverage-html/
          destination: coverage
      - persist_to_workspace:
          root: "."
          paths:
            - "tests/results"

  sonarcloud:
    executor: php
    steps:
      - attach_workspace:
          at: "."
      - sonarcloud/scan

  deploy:
    executor: php
    steps:
      - attach_workspace:
          at: "."
      - run:
          name: Configure SSH
          command: |
            mkdir -p ~/.ssh
            echo "$SSH_KEY_PRIVATE" | base64 -d > ~/.ssh/id_rsa
            echo "$SSH_KEY_PUBLIC" | base64 -d > ~/.ssh/id_rsa.pub
            chmod 600 ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa.pub
            ssh-keyscan -H $SSH_SERVER >> ~/.ssh/known_hosts
      - run:
          name: Deploy
          command: |
            scp scripts/deploy.sh $SSH_USER@$SSH_SERVER:/var/www/$SITE_ROOT/deploy.sh
            ssh $SSH_USER@$SSH_SERVER "
              /var/www/$SITE_ROOT/deploy.sh \
                $CIRCLE_REPOSITORY_URL \
                $CIRCLE_SHA1 \
                $SITE_ROOT
            "

workflows:
  version: 2

  build:
    jobs:
      - checkout-code
      - test:
          requires:
            - checkout-code
      - sonarcloud:
          context:
            - SonarCloud
          requires:
            - test
      - deploy:
          name: deploy-staging
          context:
            - v4-base
            - v4-staging
          requires:
            - test
            - sonarcloud
          filters:
            branches:
              only:
                - main
      - prd-hold:
          type: approval
          requires:
            - deploy-staging
          filters:
            branches:
              only:
                - main
      - deploy:
          name: deploy-prd
          context:
            - v4-base
            - v4-prd
          requires:
            - prd-hold
          filters:
            branches:
              only:
                - main
